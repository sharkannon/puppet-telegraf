# THIS FILE IS MANAGED BY PUPPET (created by defined type modules::telegraf )

# Telegraf configuration

# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.

# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.

# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.

# Global tags can be specified here in key="value" format.
# [tags]
#   dc = "us-east-1" # will tag all metrics with dc=us-east-1
#   rack = "1a"
<% if @tags -%>
[tags]
<%   @tags.sort.each do |key, value| -%>
   <%= key %> = "<%= value %>"
<%   end -%>
<% end -%>

# Configuration for telegraf agent
[agent]
  # Default data collection interval for all plugins
  interval = "<%= @agent_interval %>"
  # Rounds collection interval to 'interval'
  # ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  # Default data flushing interval for all outputs. You should not set this below
  # interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "<%= @agent_flush_interval %>"
  # Jitter the flush interval by a random amount. This is primarily to avoid
  # large write spikes for users running a large number of telegraf instances.
  # ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "5s"

  # Run telegraf in debug mode
  debug = false
  # Override default hostname, if empty use os.Hostname()
  <% if @agent_hostname -%>
  hostname = "<%= @agent_hostname %>"
  <% else -%>
  hostname = ""
  <% end -%>

###############################################################################
#                                  OUTPUTS                                    #
###############################################################################

<% if @outputs_influxdb_enabled -%>
# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  # The full HTTP or UDP endpoint URL for your InfluxDB instance.
  # Multiple urls can be specified but it is assumed that they are part of the same
  # cluster, this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  # urls = ["http://localhost:8086"] # required
  urls = <%= @outputs_influxdb_urls.inspect %>

  # The target database for metrics (telegraf will create it if not exists)
  # database = "telegraf" # required.
  database = "<%= @outputs_influxdb_database %>"

  # Precision of writes, valid values are n, u, ms, s, m, and h
  # note: using second precision greatly helps InfluxDB compression
  precision = "s"

  # Connection timeout (for the connection with InfluxDB), formatted as a string.
  # If not provided, will default to 0 (no timeout)
  # timeout = "5s"
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"
  username = "<%= @outputs_influxdb_username %>"
  password = "<%= @outputs_influxdb_password %>"

  # Set the user agent for HTTP POSTs (can be useful for log differentiation)
  # user_agent = "telegraf"
  user_agent = "telegraf <%= @version %>"

  # Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
  # udp_payload = 512
<% end -%>


###############################################################################
#                                  INPUTS                                     #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  # Whether to report per-cpu stats or not
  percpu = <%= scope['::telegraf::cpu_percpu']%>
  # Whether to report total system cpu stats or not
  totalcpu = <%= scope['::telegraf::cpu_totalcpu']%>
  # Comment this line if you want the raw CPU time metrics
  drop = <%= scope['::telegraf::cpu_drop']%>

# Read metrics about disk usage by mount point
[[inputs.disk]]
  # By default, telegraf gather stats for all mountpoints.
  # Setting mountpoints will restrict the stats to the specified mountpoints.
<% if scope['::telegraf::disk_mountpoints.any?']%>
  Mountpoints = <%= scope['::telegraf::disk_mountpoints'].inspect %>
<% end %>

# Read metrics about disk IO by device
[[inputs.io]]
  # By default, telegraf will gather stats for all devices including
  # disk partitions.
  # Setting devices will restrict the stats to the specified devices.
  # devices = ["sda", "sdb"]
  # Uncomment the following line if you do not need disk serial numbers.
  # skip_serial_number = true]

# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

# Read metrics about network usage
[[inputs.net]]
  # By default, telegraf gathers stats from any up interface (excluding loopback)
  # Setting interfaces will tell it to gather these explicit interfaces,
  # regardless of status.
  #
  # interfaces = ["eth0", ... ]
  #
  # We drop not wanted icmp metrics
  drop = ["net_icmp"]

# Read metrics about swap memory usage
[[inputs.swap]]
  # no configuration

# Read metrics about system load & uptime
[[inputs.system]]
  # no configuration

###############################################################################
#                              SERVICE PLUGINS                                #
###############################################################################
